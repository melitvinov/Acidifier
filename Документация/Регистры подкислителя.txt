// Регистры платы подкислителя
TRegEntry RegEntries[] = 
{
	{.addr=0, .idx = 0, .read = readDescReg, .write=0, },
	{.addr=1, .idx = 1, .read = readDescReg, .write=0, },
	{.addr=2, .idx = 2, .read = readDescReg, .write=0, },
	{.addr=3, .idx = 3, .read = readDescReg, .write=0, },
	{.addr=4, .idx = 4, .read = readDescReg, .write=0, },
	{.addr=5, .idx = 5, .read = readDescReg, .write=0, },
	{.addr=6, .idx = 6, .read = readDescReg, .write=0, },
	{.addr=7, .idx = 7, .read = readDescReg, .write=0, },
	{.addr=8, .idx = 8, .read = readDescReg, .write=0, },
	
	{.addr=30, .idx = 0, .read = readAddIn, .write=writeAddIn, },
	{.addr=31, .idx = 1, .read = readAddIn, .write=0, },
	{.addr=32, .idx = 2, .read = readAddIn, .write=0, },
	
	{.addr=50, .idx = 3, .read = readAddIn, .write=writeAddIn, },
	{.addr=51, .idx = 4, .read = readAddIn, .write=writeAddIn, },
	{.addr=52, .idx = 5, .read = readAddIn, .write=writeAddIn, },
	{.addr=53, .idx = 6, .read = readAddIn, .write=writeAddIn, },
	{.addr=54, .idx = 7, .read = readAddIn, .write=writeAddIn, },
	{.addr=55, .idx = 8, .read = readAddIn, .write=writeAddIn, },
	{.addr=56, .idx = 9, .read = readAddIn, .write=writeAddIn, },
	{.addr=57, .idx = 10, .read = readAddIn, .write=writeAddIn, },
	{.addr=58, .idx = 11, .read = readAddIn, .write=writeAddIn, },
	{.addr=59, .idx = 12, .read = readAddIn, .write=writeAddIn, },

	// Текущий режим работы ( 1-Регулирование, 2-калибровка Т1, 3-калибровка Т2 )
	{.addr=1000+0, .idx = 0, .read = ReadWorkMode, .write=0 },

	// Значение АЦП датчика PH №1
	{.addr=1000+1, .idx = 0, .read = AInp_ReadAdcValue, .write=0 },
	// Значение АЦП датчика PH №2
	{.addr=1000+2, .idx = 1, .read = AInp_ReadAdcValue, .write=0 },
	// Значение датчика PH №1 ( умноженное на 10 )
	{.addr=1000+3, .idx = 0, .read = AInp_ReadPhValue, .write=0 },
	// Значение датчика PH №2 ( умноженное на 10 )
	{.addr=1000+4, .idx = 1, .read = AInp_ReadPhValue, .write=0 },
	// Системное значение PH ( умноженное на 10 ) 
	//( берется с датчика PH №1. Если разбег значений датчиков 1 и 2 больше +-0.5, то -1 )
	{.addr=1000+5, .idx = 0, .read = AInp_ReadSystemPh, .write=0 },
	// Заданное значение PH ( умноженное на 10 )
	{.addr=1000+6, .idx = 0, .read = ReadSetupPhValue, .write=WriteSetupPhValue },

	// тарировочная точка 1 для датчика №1
	{.addr=1000+7, .idx = 0, .read = AInp_ReadAdcTar1, .write=AInp_WriteAdcTar1 },
	{.addr=1000+8, .idx = 0, .read = AInp_ReadPhTar1, .write=AInp_WritePhTar1 },
	// тарировочная точка 2 для датчика №1
	{.addr=1000+9, .idx = 0, .read = AInp_ReadAdcTar2, .write=AInp_WriteAdcTar2 },
	{.addr=1000+10, .idx = 0, .read = AInp_ReadPhTar2, .write=AInp_WritePhTar2 },

	// тарировочная точка 1 для датчика №2
	{.addr=1000+11, .idx = 1, .read = AInp_ReadAdcTar1, .write=AInp_WriteAdcTar1 },
	{.addr=1000+12, .idx = 1, .read = AInp_ReadPhTar1, .write=AInp_WritePhTar1 },
	// тарировочная точка 2 для датчика №2
	{.addr=1000+13, .idx = 1, .read = AInp_ReadAdcTar2, .write=AInp_WriteAdcTar2 },
	{.addr=1000+14, .idx = 1, .read = AInp_ReadPhTar2, .write=AInp_WritePhTar2 },

	// пропорциональный коэффициент 
	{.addr=1000+15, .idx = 0, .read = Reg_ReadCoefficient, .write=Reg_WriteCoefficient },
	// интегральный коэффициент 
	{.addr=1000+16, .idx = 1, .read = Reg_ReadCoefficient, .write=Reg_WriteCoefficient },
	// дифференциальный коэффициент 
	{.addr=1000+17, .idx = 2, .read = Reg_ReadCoefficient, .write=Reg_WriteCoefficient },
	
	// таймаут в секундах задержки включения насоса и процесса регулирования после подачи воды
	{.addr=1000+18, .idx = 0, .read = Reg_Read_TIMEOUT_REGULATOR_ON_SEC, .write=Reg_Write_TIMEOUT_REGULATOR_ON_SEC },
	// максимальное время в секундах отклонения значения PH от задания PH для остановки регулятора и насоса
	{.addr=1000+19, .idx = 0, .read = Reg_Read_TIMEOUT_ERROR_PH_SEC, .write=Reg_Write_TIMEOUT_ERROR_PH_SEC },
	// длительность интервала дозации
	{.addr=1000+20, .idx = 0, .read = Reg_Read_REG_CYCLETIME_SEC, .write=Reg_Write_REG_CYCLETIME_SEC },
	// таймаут задержки отключения насоса в секундах (1-20)
	{.addr=1000+21, .idx = 0, .read = Reg_Read_DELAY_PUMP_OFF_SEC, .write=Reg_Write_DELAY_PUMP_OFF_SEC },
	
	// флаг - отсутствие воды (0-1)
	{.addr=1000+22, .idx = MON_IsNoWater, .read = Reg_Read_MonitoringValue, .write=0 },
	// флаг - ошибка датчиков
	{.addr=1000+23, .idx = MON_IsErrSensors, .read = Reg_Read_MonitoringValue, .write=0 },
	// флаг - ошибка регулирования
	{.addr=1000+24, .idx = MON_IsErrTimeoutSetupPh, .read = Reg_Read_MonitoringValue, .write=0 },
	
	// установленное значение PH
	{.addr=1000+25, .idx = MON_PH_Setup, .read = Reg_Read_MonitoringValue, .write=0 },
	// текущее значение PH1
	{.addr=1000+26, .idx = MON_PH1_Current, .read = Reg_Read_MonitoringValue, .write=0 },
	// текущее значение PH2
	{.addr=1000+27, .idx = MON_PH2_Current, .read = Reg_Read_MonitoringValue, .write=0 },
	
	// % открытия регулятора
	{.addr=1000+28, .idx = MON_RegPercentOn, .read = Reg_Read_MonitoringValue, .write=0 },
	// значение PID * 100;
	{.addr=1000+29, .idx = MON_PID_Value, .read = Reg_Read_MonitoringValue, .write=0 },
	// знак PID 
	{.addr=1000+30, .idx = MON_PID_Positive, .read = Reg_Read_MonitoringValue, .write=0 },
	// DeltaPercent;
	{.addr=1000+31, .idx = MON_DeltaPercent, .read = Reg_Read_MonitoringValue, .write=0 },
	// знак DeltaPercent 
	{.addr=1000+32, .idx = MON_DeltaPercentPositive, .read = Reg_Read_MonitoringValue, .write=0 },
	// длительность открытия клапана в мс.
	{.addr=1000+33, .idx = MON_ImpulseTime_ms, .read = Reg_Read_MonitoringValue, .write=0 },
	
	// таблица оптимальных значений регулятора
	// чтение таблицы
	// Первая запись
	{.addr=1000+34, .idx = 0, .read = Reg_OptValues_Read, .write=0 },	// ph_setup_def
	{.addr=1000+35, .idx = 1, .read = Reg_OptValues_Read, .write=Reg_OptValues_Write },	// reg_value_opt_def
	{.addr=1000+36, .idx = 2, .read = Reg_OptValues_Read, .write=0 },	// ph_setup_user
	{.addr=1000+37, .idx = 3, .read = Reg_OptValues_Read, .write=0 },	// reg_value_opt_calc
	// Вторая запись
	{.addr=1000+38, .idx = 4, .read = Reg_OptValues_Read, .write=0 },	// ph_setup_def
	{.addr=1000+39, .idx = 5, .read = Reg_OptValues_Read, .write=Reg_OptValues_Write },	// reg_value_opt_def
	{.addr=1000+40, .idx = 6, .read = Reg_OptValues_Read, .write=0 },	// ph_setup_user
	{.addr=1000+41, .idx = 7, .read = Reg_OptValues_Read, .write=0 },	// reg_value_opt_calc
	// Третья запись
	{.addr=1000+42, .idx = 8, .read = Reg_OptValues_Read, .write=0 },	// ph_setup_def
	{.addr=1000+43, .idx = 9, .read = Reg_OptValues_Read, .write=Reg_OptValues_Write },	// reg_value_opt_def
	{.addr=1000+44, .idx =10, .read = Reg_OptValues_Read, .write=0 },// ph_setup_user
	{.addr=1000+45, .idx =11, .read = Reg_OptValues_Read, .write=0 },// reg_value_opt_calc
};
